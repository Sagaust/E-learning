{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsvmu\\\\E-learning\\\\frontend\\\\src\\\\pages\\\\SearchResultsPage\\\\SearchResultsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../components/common/Navbar/Navbar';\nimport Footer from '../components/common/Footer/Footer';\nimport CourseList from '../components/CourseList/CourseList';\nimport ResourceCard from '../components/ResourceCard/ResourceCard';\nimport './SearchResultsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResultsPage = () => {\n  _s();\n  // Here, you might want to fetch search results based on user query.\n  const [searchResults, setSearchResults] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-list\",\n        children: searchResults.map(result =>\n        // Depending on the type of result (course or resource), render the appropriate component\n        result.type === 'course' ? /*#__PURE__*/_jsxDEV(CourseList, {\n          course: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(ResourceCard, {\n          resource: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 73\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResultsPage, \"yyVBuiEzaYu8nxmfiuyN+Jj3pbw=\");\n_c = SearchResultsPage;\nexport default SearchResultsPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultsPage\");","map":{"version":3,"names":["React","useState","Navbar","Footer","CourseList","ResourceCard","jsxDEV","_jsxDEV","SearchResultsPage","_s","searchResults","setSearchResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","type","course","resource","_c","$RefreshReg$"],"sources":["C:/Users/fsvmu/E-learning/frontend/src/pages/SearchResultsPage/SearchResultsPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Navbar from '../components/common/Navbar/Navbar';\r\nimport Footer from '../components/common/Footer/Footer';\r\nimport CourseList from '../components/CourseList/CourseList';\r\nimport ResourceCard from '../components/ResourceCard/ResourceCard';\r\nimport './SearchResultsPage.css';\r\n\r\nconst SearchResultsPage = () => {\r\n  // Here, you might want to fetch search results based on user query.\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  return (\r\n    <div className=\"search-results-page\">\r\n      <Navbar />\r\n      <main>\r\n        <h2>Search Results</h2>\r\n        <div className=\"results-list\">\r\n          {searchResults.map(result => (\r\n            // Depending on the type of result (course or resource), render the appropriate component\r\n            result.type === 'course' ? <CourseList course={result} /> : <ResourceCard resource={result} />\r\n          ))}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,oCAAoC;AACvD,OAAOC,MAAM,MAAM,oCAAoC;AACvD,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,YAAY,MAAM,yCAAyC;AAClE,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,oBACEM,OAAA;IAAKK,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCN,OAAA,CAACL,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVV,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAAM,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBV,OAAA;QAAKK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BH,aAAa,CAACQ,GAAG,CAACC,MAAM;QACvB;QACAA,MAAM,CAACC,IAAI,KAAK,QAAQ,gBAAGb,OAAA,CAACH,UAAU;UAACiB,MAAM,EAAEF;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGV,OAAA,CAACF,YAAY;UAACiB,QAAQ,EAAEH;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC9F;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACPV,OAAA,CAACJ,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAR,EAAA,CAnBKD,iBAAiB;AAAAe,EAAA,GAAjBf,iBAAiB;AAqBvB,eAAeA,iBAAiB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}